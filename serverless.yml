service: kotoka-webapp-api

plugins:
  - serverless-finch
  - serverless-dynamodb-local
  - serverless-offline

custom:
  client:
    bucketName: kotoka-static-resources
  babelOptions:
      presets: ["es2015"]

provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


functions:
  lambdaStatus:
    handler: status.lambdaStatus
  status:
    handler: status.status
    events:
      - http:
          method: get
          path: status
  echo:
    handler: status.echo
    events:
      - http:
          method: get
          path: echo
          cors: true
  create:
    handler: berries.create
    events:
      - http:
          path: berries
          method: post
          cors: true
  list:
    handler: berries.list
    events:
      - http:
          path: berries
          method: get
          cors: true
  delete:
    handler: berries.delete
    events:
      - http:
          path: berries/{id}
          method: delete
          cors: true
  
  receivePlantImage:
    handler: availableHarvester.receivePlantImage
    environment:
      PLANT_QUEUE_URL: kotokaplantqueue
      HARVESTER_LAMBDA_NAME: harvesterlambda
    events:
      - http:
          path: available
          method: get
          cors: true 

  harvesterlambda:
    handler: availableHarvester.processPlantImage
    environment:
      PLANT_QUEUE_URL: kotokaplantqueue
      PLANT_BUCKET: plantimagebucket
      

resources:
  Resources:
    berries:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
 
    kotokaplantqueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "kotokaplantqueue"
 
    plantimagebucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: "plantimagebucket"
